# Generated by Django 2.1 on 2021-04-05 08:58

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_achat', models.CharField(choices=[('Fonctionnement', 'Fonctionnement'), ('MAJ', 'MAJ')], default='Fonctionnement', max_length=30, null=True)),
                ('date_achat', models.DateField(null=True)),
                ('quantite', models.DecimalField(decimal_places=3, max_digits=6, null=True)),
            ],
            options={
                'verbose_name': 'Achat',
                'ordering': ['date_achat'],
            },
        ),
        migrations.CreateModel(
            name='Brassin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_brassin', models.DateField(null=True)),
                ('numero', models.CharField(blank=True, max_length=30, null=True)),
                ('date_mise_bouteille', models.DateField(blank=True, null=True)),
                ('densite_avant_ebullition', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('densite_initiale', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('densite_finale', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('volume_empatage', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('volume_rincage_dreches', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('volume_mout', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('volume_cuve_fermentation', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('volume_starter', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=5, null=True)),
                ('temps_empatage', models.TimeField(blank=True, default='01:15:00', null=True)),
                ('temps_ebullition', models.TimeField(blank=True, default='01:30:00', null=True)),
                ('temps_fermentation', models.TimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('resucrage', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('archive', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Brassin',
                'ordering': ['-date_brassin'],
            },
        ),
        migrations.CreateModel(
            name='BrassinEtapeChauffe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveIntegerField(default=1)),
                ('temps_etape', models.TimeField(default='00:00:00')),
                ('temperature', models.DecimalField(decimal_places=1, max_digits=3)),
                ('brassin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brassin.Brassin')),
            ],
        ),
        migrations.CreateModel(
            name='BrassinIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('temps_infusion', models.TimeField(blank=True, default='01:30:00', null=True)),
                ('achete', models.BooleanField(default=True)),
                ('brassin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brassin.Brassin')),
            ],
        ),
        migrations.CreateModel(
            name='BrassinProduit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.PositiveIntegerField()),
                ('brassin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brassin.Brassin')),
            ],
            options={
                'verbose_name': 'Produits disponibles',
                'ordering': ['-brassin__date_brassin'],
            },
        ),
        migrations.CreateModel(
            name='Fermenteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(blank=True, max_length=30, null=True)),
                ('volume', models.DecimalField(decimal_places=1, max_digits=5)),
                ('marque', models.CharField(blank=True, max_length=30, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_ingredient', models.CharField(choices=[('Malt', 'Malt'), ('Houblon', 'Houblon'), ('Levure', 'Levure'), ('Autre', 'Autre')], default='Autre', max_length=30, null=True)),
                ('variete', models.CharField(max_length=30)),
                ('prix_kg', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('acide_alpha', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('ebc_min', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('ebc_max', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('attenuation_min', models.DecimalField(blank=True, decimal_places=0, max_digits=2, null=True)),
                ('attenuation_max', models.DecimalField(blank=True, decimal_places=0, max_digits=2, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Ingredient',
                'ordering': ['type_ingredient'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True)),
                ('titre', models.CharField(blank=True, max_length=30, null=True)),
                ('texte', models.TextField()),
                ('auteur', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'Notes',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_produit', models.CharField(choices=[('Bouteille', 'Bouteille'), ('Canette', 'Canette'), ('Fut', 'Fut'), ('Autre', 'Autre')], default='Bouteille', max_length=30, null=True)),
                ('contenance', models.DecimalField(decimal_places=2, max_digits=6)),
                ('prix', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brasserie', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='media/logos/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recette',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=30)),
                ('type_biere', models.CharField(blank=True, max_length=30, null=True)),
                ('densite_desire', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('taux_empatage', models.DecimalField(decimal_places=3, default=0.3, max_digits=4)),
                ('resucrage', models.DecimalField(blank=True, decimal_places=1, default=7, max_digits=3, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('etiquette', models.ImageField(blank=True, null=True, upload_to='images')),
            ],
            options={
                'verbose_name': 'Recette',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RecetteIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('temps_infusion', models.TimeField(blank=True, default='01:30:00', null=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brassin.Ingredient')),
                ('recette', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brassin.Recette')),
            ],
        ),
        migrations.CreateModel(
            name='Vente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_vente', models.DateField(default=datetime.datetime.now, null=True)),
                ('quantite', models.PositiveIntegerField()),
                ('client', models.CharField(blank=True, max_length=30, null=True)),
                ('vendeur', models.CharField(blank=True, max_length=30, null=True)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=6)),
                ('virement', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('brassin_produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brassin.BrassinProduit')),
            ],
            options={
                'verbose_name': 'Vente',
                'ordering': ['date_vente'],
            },
        ),
        migrations.AddField(
            model_name='brassinproduit',
            name='produit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brassin.Produit'),
        ),
        migrations.AddField(
            model_name='brassiningredient',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brassin.Ingredient'),
        ),
        migrations.AddField(
            model_name='brassin',
            name='fermenteur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brassin.Fermenteur'),
        ),
        migrations.AddField(
            model_name='brassin',
            name='ingredient',
            field=models.ManyToManyField(blank=True, null=True, through='brassin.BrassinIngredient', to='brassin.Ingredient'),
        ),
        migrations.AddField(
            model_name='brassin',
            name='recette',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brassin.Recette'),
        ),
        migrations.AddField(
            model_name='achat',
            name='ingredient',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='brassin.Ingredient'),
        ),
    ]
